function [netObj] = model_lstm_encoder(netObj, time)
% model_lstm_encoder define the model of LSTM of the encoder part with
% Backpropogation Through Time (BPTT).

label = sprintf('_t%d', time);
if time == 1
    netObj.newLayer({
        'type'   'layers.convolution'...
        'name'   ['encoder_inputgate_data' label]...
        'bottom' ['data' label] ...
        'top'    ['encoder_inputgate_data' label]...
        'convolution_param' {
            'num_output'  128 ...
            'kernel_size' 1  ...
            'pad'         0  ...
            'stride'      1  ...
            }...
        'weight_param' {
            'name'         {'encoder_inputgate_data_w', 'encoder_inputgate_data_b'} ...
            'generator'    {@nn.generator.xavier, @nn.generator.constant} ...
            'learningRate' [1 2]
            }
        });
    netObj.newLayer({
        'type'   'layers.sigmoid'...
        'name'   ['encoder_inputgate_sigmoid' label]...
        'bottom' ['encoder_inputgate_data' label]...
        'top'    ['encoder_inputgate_sigmoid' label]...
        });
    netObj.newLayer({
        'type'   'layers.convolution'...
        'name'   ['encoder_forgetgate_data' label]...
        'bottom' ['data' label] ...
        'top'    ['encoder_forgetgate_data' label]...
        'convolution_param' {
            'num_output'  128 ...
            'kernel_size' 1  ...
            'pad'         0  ...
            'stride'      1  ...
            }...
        'weight_param' {
            'name'         {'encoder_forgetgate_data_w', 'encoder_forgetgate_data_b'} ...
            'generator'    {@nn.generator.xavier, @nn.generator.constant} ...
            'learningRate' [1 2]
            }
        });
    netObj.newLayer({
        'type'   'layers.sigmoid'...
        'name'   ['encoder_forgetgate_sigmoid' label]...
        'bottom' ['encoder_forgetgate_data' label]...
        'top'    ['encoder_forgetgate_sigmoid' label]...
        });
    netObj.newLayer({
        'type'   'layers.convolution'...
        'name'   ['encoder_modulategate_data' label]...
        'bottom' ['data' label] ...
        'top'    ['encoder_modulategate_data' label]...
        'convolution_param' {
            'num_output'  128 ...
            'kernel_size' 1  ...
            'pad'         0  ...
            'stride'      1  ...
            }...
        'weight_param' {
            'name'         {'encoder_modulategate_data_w', 'encoder_modulategate_data_b'} ...
            'generator'    {@nn.generator.xavier, @nn.generator.constant} ...
            'learningRate' [1 2]
            }
        });
    netObj.newLayer({
        'type'   'layers.hybtangent'...
        'name'   ['encoder_modulategate_tanh' label]...
        'bottom' ['encoder_modulategate_data' label]...
        'top'    ['encoder_modulategate_tanh' label]...
        });
    netObj.newLayer({
        'type'   'layers.eltwise' ...
        'name'   ['encoder_cell' label] ...
        'bottom' {['encoder_modulategate_tanh' label], ['encoder_inputgate_sigmoid' label]} ...
        'top'    ['encoder_cell' label]...
        'operation' 'prod'
        })
    netObj.newLayer({
        'type' 'layers.hybtangent'...
        'name'   ['encoder_cell_tanh' label]...
        'bottom' ['encoder_cell' label] ...
        'top'    ['encoder_cell_tanh' label]
        })
    netObj.newLayer({
        'type'   'layers.convolution'...
        'name'   ['encoder_outputgate_data' label]...
        'bottom' ['data' label] ...
        'top'    ['encoder_outputgate_data' label]...
        'convolution_param' {
            'num_output'  128 ...
            'kernel_size' 1  ...
            'pad'         0  ...
            'stride'      1  ...
            }...
        'weight_param' {
            'name'         {'encoder_outputgate_data_w', 'encoder_outputgate_data_b'} ...
            'generator'    {@nn.generator.xavier, @nn.generator.constant} ...
            'learningRate' [1 2]
            }
        });
    netObj.newLayer({
        'type'   'layers.convolution'...
        'name'   ['encoder_outputgate_cell' label]...
        'bottom' ['encoder_cell' label] ...
        'top'    ['encoder_outputgate_cell' label]...
        'convolution_param' {
            'num_output'  128 ...
            'kernel_size' 1  ...
            'pad'         0  ...
            'stride'      1  ...
            }...
        'weight_param' {
            'name'         {'encoder_outputgate_cell_w', 'encoder_outputgate_cell_b'} ...
            'generator'    {@nn.generator.xavier, @nn.generator.constant} ...
            'learningRate' [1 2]
            }
        });
    netObj.newLayer({
        'type'   'layers.eltwise'...
        'name'   ['encoder_outputgate' label] ...
        'bottom' {['encoder_outputgate_data' label], ['encoder_outputgate_cell' label]}...
        'top'    ['encoder_outputgate' label]...
        'operation' 'sum'
        })
    netObj.newLayer({
        'type'   'layers.sigmoid'...
        'name'   ['encoder_outputgate_sigmoid' label]...
        'bottom' ['encoder_outputgate' label]...
        'top'    ['encoder_outputgate_sigmoid' label]...
        });
    netObj.newLayer({
        'type'   'layers.eltwise'...
        'name'   ['encoder_final' label] ...
        'bottom' {['encoder_outputgate_sigmoid' label], ['encoder_cell_tanh' label]}...
        'top'    ['encoder_final' label]...
        'operation' 'prod'
        })
else
    label_last = sprintf('_t%d', time-1);
    netObj.newLayer({
        'type'   'layers.convolution'...
        'name'   ['encoder_inputgate_data' label]...
        'bottom' ['data' label] ...
        'top'    ['encoder_inputgate_data' label]...
        'convolution_param' {
            'num_output'  128 ...
            'kernel_size' 1  ...
            'pad'         0  ...
            'stride'      1  ...
            }...
        'weight_param' {
            'name'         {'encoder_inputgate_data_w', 'encoder_inputgate_data_b'} ...
            'generator'    {@nn.generator.xavier, @nn.generator.constant} ...
            'learningRate' [1 2]
            }
        });
    netObj.newLayer({
        'type'   'layers.convolution'...
        'name'   ['encoder_inputgate_final' label]...
        'bottom' ['encoder_final' label_last] ...
        'top'    ['encoder_inputgate_final' label]...
        'convolution_param' {
            'num_output'  128 ...
            'kernel_size' 1  ...
            'pad'         0  ...
            'stride'      1  ...
            }...
        'weight_param' {
            'name'         {'encoder_inputgate_final_w', 'encoder_inputgate_final_b'} ...
            'generator'    {@nn.generator.xavier, @nn.generator.constant} ...
            'learningRate' [1 2]
            }
        });
    netObj.newLayer({
        'type'   'layers.convolution'...
        'name'   ['encoder_inputgate_cell' label]...
        'bottom' ['encoder_cell' label_last] ...
        'top'    ['encoder_inputgate_cell' label]...
        'convolution_param' {
            'num_output'  128 ...
            'kernel_size' 1  ...
            'pad'         0  ...
            'stride'      1  ...
            }...
        'weight_param' {
            'name'         {'encoder_inputgate_cell_w', 'encoder_inputgate_cell_b'} ...
            'generator'    {@nn.generator.xavier, @nn.generator.constant} ...
            'learningRate' [1 2]
            }
        });
    netObj.newLayer({
        'type'   'layers.eltwise'...
        'name'   ['encoder_inputgate_cell_final' label] ...
        'bottom' {['encoder_inputgate_cell' label], ['encoder_inputgate_final' label]}...
        'top'    ['encoder_inputgate_cell_final' label]...
        'operation' 'sum'
        })
    netObj.newLayer({
        'type'   'layers.eltwise'...
        'name'   ['encoder_inputgate' label] ...
        'bottom' {['encoder_inputgate_data' label], ['encoder_inputgate_cell_final' label]} ...
        'top'    ['encoder_inputgate' label]...
        'operation' 'sum'
        })
    netObj.newLayer({
        'type'   'layers.sigmoid'...
        'name'   ['encoder_inputgate_sigmoid' label]...
        'bottom' ['encoder_inputgate' label]...
        'top'    ['encoder_inputgate_sigmoid' label]...
        });
    netObj.newLayer({
        'type'   'layers.convolution'...
        'name'   ['encoder_forgetgate_data' label]...
        'bottom' ['data' label] ...
        'top'    ['encoder_forgetgate_data' label]...
        'convolution_param' {
            'num_output'  128 ...
            'kernel_size' 1  ...
            'pad'         0  ...
            'stride'      1  ...
            }...
        'weight_param' {
            'name'         {'encoder_forgetgate_data_w', 'encoder_forgetgate_data_b'} ...
            'generator'    {@nn.generator.xavier, @nn.generator.constant} ...
            'learningRate' [1 2]
            }
        });
    netObj.newLayer({
        'type'   'layers.convolution'...
        'name'   ['encoder_forgetgate_cell' label]...
        'bottom' ['encoder_cell' label_last] ...
        'top'    ['encoder_forgetgate_cell' label]...
        'convolution_param' {
            'num_output'  128 ...
            'kernel_size' 1  ...
            'pad'         0  ...
            'stride'      1  ...
            }...
        'weight_param' {
            'name'         {'encoder_forgetgate_cell_w', 'encoder_forgetgate_cell_b'} ...
            'generator'    {@nn.generator.xavier, @nn.generator.constant} ...
            'learningRate' [1 2]
            }
        });
    netObj.newLayer({
        'type'   'layers.convolution'...
        'name'   ['encoder_forgetgate_final' label]...
        'bottom' ['encoder_final' label_last] ...
        'top'    ['encoder_forgetgate_final' label]...
        'convolution_param' {
            'num_output'  128 ...
            'kernel_size' 1  ...
            'pad'         0  ...
            'stride'      1  ...
            }...
        'weight_param' {
            'name'         {'encoder_forgetgate_final_w', 'encoder_forgetgate_final_b'} ...
            'generator'    {@nn.generator.xavier, @nn.generator.constant} ...
            'learningRate' [1 2]
            }
        });
    netObj.newLayer({
        'type'   'layers.eltwise'...
        'name'   ['encoder_forgetgate_cell_final' label] ...
        'bottom' {['encoder_forgetgate_cell' label], ['encoder_forgetgate_final' label]}...
        'top'    ['encoder_forgetgate_cell_final' label]...
        'operation' 'sum'
        })
    netObj.newLayer({
        'type'   'layers.eltwise' ...
        'name'   ['encoder_forgetgate' label]...
        'bottom' {['encoder_forgetgate_data' label], ['encoder_forgetgate_cell_final' label]} ...
        'top'    ['encoder_forgetgate' label]...
        'operation' 'sum'
        })
    netObj.newLayer({
        'type'   'layers.sigmoid'...
        'name'   ['encoder_forgetgate_sigmoid' label]...
        'bottom' ['encoder_forgetgate' label] ...
        'top'    ['encoder_forgetgate_sigmoid' label]...
        });
    netObj.newLayer({
        'type'   'layers.convolution'...
        'name'   ['encoder_modulategate_data' label]...
        'bottom' ['data' label] ...
        'top'    ['encoder_modulategate_data' label]...
        'convolution_param' {
            'num_output'  128 ...
            'kernel_size' 1  ...
            'pad'         0  ...
            'stride'      1  ...
            }...
        'weight_param' {
            'name'         {'encoder_modulategate_data_w', 'encoder_modulategate_data_b'} ...
            'generator'    {@nn.generator.xavier, @nn.generator.constant} ...
            'learningRate' [1 2]
            }
        });
    netObj.newLayer({
        'type'   'layers.convolution'...
        'name'   ['encoder_modulategate_final' label]...
        'bottom' ['encoder_final' label_last] ...
        'top'    ['encoder_modulategate_final' label]...
        'convolution_param' {
            'num_output'  128 ...
            'kernel_size' 1  ...
            'pad'         0  ...
            'stride'      1  ...
            }...
        'weight_param' {
            'name'         {'encoder_modulategate_final_w', 'encoder_modulategate_final_b'} ...
            'generator'    {@nn.generator.xavier, @nn.generator.constant} ...
            'learningRate' [1 2]
            }
        });

    netObj.newLayer({
        'type'   'layers.eltwise'...
        'name'   ['encoder_modulategate' label] ...
        'bottom' {['encoder_modulategate_data' label], ['encoder_modulategate_final' label]}...
        'top'    ['encoder_modulategate' label]...
        'operation' 'sum'
        })
    netObj.newLayer({
        'type'   'layers.hybtangent'...
        'name'   ['encoder_modulategate_tanh' label]...
        'bottom' ['encoder_modulategate' label]...
        'top'    ['encoder_modulategate_tanh' label]...
        });
    netObj.newLayer({
        'type'   'layers.eltwise' ...
        'name'   ['encoder_cell_mod_input' label] ...
        'bottom' {['encoder_modulategate_tanh' label], ['encoder_inputgate_sigmoid' label]} ...
        'top'    ['encoder_cell_mod_input' label]...
        'operation' 'prod'
        })
    netObj.newLayer({
        'type'   'layers.eltwise' ...
        'name'   ['encoder_cell_cell_forget' label] ...
        'bottom' {['encoder_cell' label_last], ['encoder_forgetgate_sigmoid' label]} ...
        'top'    ['encoder_cell_cell_forget' label]...
        'operation' 'prod'
        })
    netObj.newLayer({
        'type'   'layers.eltwise' ...
        'name'   ['encoder_cell' label] ...
        'bottom' {['encoder_cell_cell_forget' label], ['encoder_cell_mod_input' label]} ...
        'top'    ['encoder_cell' label]...
        'operation' 'sum'
        })
    netObj.newLayer({
        'type'   'layers.hybtangent'...
        'name'   ['encoder_cell_tanh' label]...
        'bottom' ['encoder_cell' label] ...
        'top'    ['encoder_cell_tanh' label]
        })
    netObj.newLayer({
        'type'   'layers.convolution'...
        'name'   ['encoder_outputgate_data' label]...
        'bottom' ['data' label] ...
        'top'    ['encoder_outputgate_data' label]...
        'convolution_param' {
            'num_output'  128 ...
            'kernel_size' 1  ...
            'pad'         0  ...
            'stride'      1  ...
            }...
        'weight_param' {
            'name'         {'encoder_outputgate_data_w', 'encoder_outputgate_data_b'} ...
            'generator'    {@nn.generator.xavier, @nn.generator.constant} ...
            'learningRate' [1 2]
            }
        });
    netObj.newLayer({
        'type'   'layers.convolution'...
        'name'   ['encoder_outputgate_cell' label]...
        'bottom' ['encoder_cell' label] ...
        'top'    ['encoder_outputgate_cell' label]...
        'convolution_param' {
            'num_output'  128 ...
            'kernel_size' 1  ...
            'pad'         0  ...
            'stride'      1  ...
            }...
        'weight_param' {
            'name'         {'encoder_outputgate_cell_w', 'encoder_outputgate_cell_b'} ...
            'generator'    {@nn.generator.xavier, @nn.generator.constant} ...
            'learningRate' [1 2]
            }
        });
    netObj.newLayer({
        'type'   'layers.convolution'...
        'name'   ['encoder_outputgate_final' label]...
        'bottom' ['encoder_final' label_last] ...
        'top'    ['encoder_outputgate_final' label]...
        'convolution_param' {
            'num_output'  128 ...
            'kernel_size' 1  ...
            'pad'         0  ...
            'stride'      1  ...
            }...
        'weight_param' {
            'name'         {'encoder_outputgate_final_w', 'encoder_outputgate_final_b'} ...
            'generator'    {@nn.generator.xavier, @nn.generator.constant} ...
            'learningRate' [1 2]
            }
        });
    netObj.newLayer({
        'type'   'layers.eltwise'...
        'name'   ['encoder_outputgate_cell_final' label] ...
        'bottom' {['encoder_outputgate_cell' label], ['encoder_outputgate_final' label]}...
        'top'    ['encoder_outputgate_cell_final' label]...
        'operation' 'sum'
        })
    netObj.newLayer({
        'type'   'layers.eltwise'...
        'name'   ['encoder_outputgate' label] ...
        'bottom' {['encoder_outputgate_data' label], ['encoder_outputgate_cell_final' label]}...
        'top'    ['encoder_outputgate' label]...
        'operation' 'sum'
        })
    netObj.newLayer({
        'type'   'layers.sigmoid'...
        'name'   ['encoder_outputgate_sigmoid' label]...
        'bottom' ['encoder_outputgate' label]...
        'top'    ['encoder_outputgate_sigmoid' label]...
        });
    netObj.newLayer({
        'type'   'layers.eltwise'...
        'name'   ['encoder_final' label] ...
        'bottom' {['encoder_outputgate_sigmoid' label], ['encoder_cell_tanh' label]}...
        'top'    ['encoder_final' label]...
        'operation' 'prod'
        })
end