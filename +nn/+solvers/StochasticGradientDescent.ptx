//
// Generated by NVIDIA NVVM Compiler
<<<<<<< HEAD
// Compiler built on Fri Aug  1 10:29:38 2014 (1406860178)
// Cuda compilation tools, release 6.5, V6.5.14
//

.version 4.1
.target sm_20
.address_size 64


=======
// Compiler built on Fri Sep  5 12:40:32 2014 (1409892032)
// Cuda compilation tools, release 6.5, V6.5.19
//

.version 4.1
.target sm_50
.address_size 64


.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

>>>>>>> upstream/master
.visible .entry _Z7forwardPfS_fffPKfi(
	.param .u64 _Z7forwardPfS_fffPKfi_param_0,
	.param .u64 _Z7forwardPfS_fffPKfi_param_1,
	.param .f32 _Z7forwardPfS_fffPKfi_param_2,
	.param .f32 _Z7forwardPfS_fffPKfi_param_3,
	.param .f32 _Z7forwardPfS_fffPKfi_param_4,
	.param .u64 _Z7forwardPfS_fffPKfi_param_5,
	.param .u32 _Z7forwardPfS_fffPKfi_param_6
)
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<6>;
	.reg .f32 	%f<13>;
	.reg .s64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z7forwardPfS_fffPKfi_param_0];
	ld.param.u64 	%rd2, [_Z7forwardPfS_fffPKfi_param_1];
	ld.param.f32 	%f1, [_Z7forwardPfS_fffPKfi_param_2];
	ld.param.f32 	%f2, [_Z7forwardPfS_fffPKfi_param_3];
	ld.param.f32 	%f3, [_Z7forwardPfS_fffPKfi_param_4];
	ld.param.u64 	%rd3, [_Z7forwardPfS_fffPKfi_param_5];
	ld.param.u32 	%r2, [_Z7forwardPfS_fffPKfi_param_6];
<<<<<<< HEAD
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_2;

	cvta.to.global.u64 	%rd4, %rd3;
	cvta.to.global.u64 	%rd5, %rd1;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f4, [%rd8];
	mul.f32 	%f5, %f4, %f3;
	add.s64 	%rd9, %rd5, %rd7;
	ld.global.f32 	%f6, [%rd9];
	add.s64 	%rd10, %rd4, %rd7;
=======
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r3;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB5_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f4, [%rd6];
	mul.f32 	%f5, %f4, %f3;
	cvta.to.global.u64 	%rd7, %rd1;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f6, [%rd8];
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
>>>>>>> upstream/master
	ld.global.f32 	%f7, [%rd10];
	fma.rn.f32 	%f8, %f6, %f2, %f7;
	mul.f32 	%f9, %f8, %f1;
	sub.f32 	%f10, %f5, %f9;
<<<<<<< HEAD
	st.global.f32 	[%rd8], %f10;
	ld.global.f32 	%f11, [%rd9];
	add.f32 	%f12, %f11, %f10;
	st.global.f32 	[%rd9], %f12;

BB0_2:
=======
	st.global.f32 	[%rd6], %f10;
	ld.global.f32 	%f11, [%rd8];
	add.f32 	%f12, %f11, %f10;
	st.global.f32 	[%rd8], %f12;

BB5_2:
>>>>>>> upstream/master
	ret;
}


