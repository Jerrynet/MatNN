//
// Generated by NVIDIA NVVM Compiler
<<<<<<< HEAD
// Compiler built on Fri Aug  1 10:29:38 2014 (1406860178)
// Cuda compilation tools, release 6.5, V6.5.14
//

.version 4.1
.target sm_20
.address_size 64


=======
// Compiler built on Fri Sep  5 12:40:32 2014 (1409892032)
// Cuda compilation tools, release 6.5, V6.5.19
//

.version 4.1
.target sm_50
.address_size 64


.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

>>>>>>> upstream/master
.visible .entry _Z7forwardPfPKfS1_fi(
	.param .u64 _Z7forwardPfPKfS1_fi_param_0,
	.param .u64 _Z7forwardPfPKfS1_fi_param_1,
	.param .u64 _Z7forwardPfPKfS1_fi_param_2,
	.param .f32 _Z7forwardPfPKfS1_fi_param_3,
	.param .u32 _Z7forwardPfPKfS1_fi_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<6>;
	.reg .f32 	%f<13>;
	.reg .s64 	%rd<10>;


	ld.param.u64 	%rd1, [_Z7forwardPfPKfS1_fi_param_0];
	ld.param.u64 	%rd2, [_Z7forwardPfPKfS1_fi_param_1];
	ld.param.u64 	%rd3, [_Z7forwardPfPKfS1_fi_param_2];
	ld.param.f32 	%f1, [_Z7forwardPfPKfS1_fi_param_3];
	ld.param.u32 	%r2, [_Z7forwardPfPKfS1_fi_param_4];
<<<<<<< HEAD
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_2;

	cvta.to.global.u64 	%rd4, %rd1;
	cvta.to.global.u64 	%rd5, %rd3;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	add.s64 	%rd9, %rd5, %rd7;
	ld.global.f32 	%f2, [%rd9];
	ld.global.f32 	%f3, [%rd8];
=======
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r3;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB5_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f2, [%rd8];
	ld.global.f32 	%f3, [%rd6];
>>>>>>> upstream/master
	mov.f32 	%f4, 0f3F800000;
	sub.f32 	%f5, %f4, %f3;
	sub.f32 	%f6, %f1, %f2;
	mov.f32 	%f7, 0f00000000;
	max.f32 	%f8, %f6, %f7;
	mul.f32 	%f9, %f5, %f8;
	fma.rn.f32 	%f10, %f3, %f2, %f9;
	mul.f32 	%f11, %f10, 0f3F000000;
<<<<<<< HEAD
	atom.global.add.f32 	%f12, [%rd4], %f11;

BB0_2:
=======
	cvta.to.global.u64 	%rd9, %rd1;
	atom.global.add.f32 	%f12, [%rd9], %f11;

BB5_2:
>>>>>>> upstream/master
	ret;
}

.visible .entry _Z8backwardPfS_fPKfS1_fii(
	.param .u64 _Z8backwardPfS_fPKfS1_fii_param_0,
	.param .u64 _Z8backwardPfS_fPKfS1_fii_param_1,
	.param .f32 _Z8backwardPfS_fPKfS1_fii_param_2,
	.param .u64 _Z8backwardPfS_fPKfS1_fii_param_3,
	.param .u64 _Z8backwardPfS_fPKfS1_fii_param_4,
	.param .f32 _Z8backwardPfS_fPKfS1_fii_param_5,
	.param .u32 _Z8backwardPfS_fPKfS1_fii_param_6,
	.param .u32 _Z8backwardPfS_fPKfS1_fii_param_7
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<8>;
	.reg .f32 	%f<17>;
	.reg .s64 	%rd<15>;


	ld.param.u64 	%rd1, [_Z8backwardPfS_fPKfS1_fii_param_0];
	ld.param.u64 	%rd2, [_Z8backwardPfS_fPKfS1_fii_param_1];
	ld.param.f32 	%f1, [_Z8backwardPfS_fPKfS1_fii_param_2];
	ld.param.u64 	%rd3, [_Z8backwardPfS_fPKfS1_fii_param_3];
	ld.param.u64 	%rd4, [_Z8backwardPfS_fPKfS1_fii_param_4];
	ld.param.f32 	%f2, [_Z8backwardPfS_fPKfS1_fii_param_5];
	ld.param.u32 	%r3, [_Z8backwardPfS_fPKfS1_fii_param_6];
	ld.param.u32 	%r2, [_Z8backwardPfS_fPKfS1_fii_param_7];
<<<<<<< HEAD
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r4, %r5, %r6;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB1_2;

	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd3;
	cvta.to.global.u64 	%rd7, %rd2;
	cvta.to.global.u64 	%rd8, %rd1;
	mul.wide.s32 	%rd9, %r1, 4;
	add.s64 	%rd10, %rd8, %rd9;
	add.s64 	%rd11, %rd7, %rd9;
	ld.global.f32 	%f3, [%rd11];
	ld.global.f32 	%f4, [%rd10];
	sub.f32 	%f5, %f4, %f3;
	div.s32 	%r7, %r1, %r2;
	mul.wide.s32 	%rd12, %r7, 4;
	add.s64 	%rd13, %rd6, %rd12;
	ld.global.f32 	%f6, [%rd13];
	mul.f32 	%f7, %f5, %f6;
	mov.f32 	%f8, 0f3F800000;
	sub.f32 	%f9, %f8, %f6;
	add.s64 	%rd14, %rd5, %rd12;
=======
	mov.u32 	%r4, %tid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r4;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB6_2;

	cvta.to.global.u64 	%rd5, %rd1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd2;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f3, [%rd9];
	ld.global.f32 	%f4, [%rd7];
	sub.f32 	%f5, %f4, %f3;
	div.s32 	%r7, %r1, %r2;
	cvta.to.global.u64 	%rd10, %rd3;
	mul.wide.s32 	%rd11, %r7, 4;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.f32 	%f6, [%rd12];
	mul.f32 	%f7, %f5, %f6;
	mov.f32 	%f8, 0f3F800000;
	sub.f32 	%f9, %f8, %f6;
	cvta.to.global.u64 	%rd13, %rd4;
	add.s64 	%rd14, %rd13, %rd11;
>>>>>>> upstream/master
	ld.global.f32 	%f10, [%rd14];
	sub.f32 	%f11, %f2, %f10;
	setp.gt.f32	%p2, %f11, 0f00000000;
	selp.f32	%f12, %f5, 0f00000000, %p2;
	mul.f32 	%f13, %f9, %f12;
	sub.f32 	%f14, %f7, %f13;
	mul.f32 	%f15, %f14, %f1;
<<<<<<< HEAD
	st.global.f32 	[%rd10], %f15;
	neg.f32 	%f16, %f15;
	st.global.f32 	[%rd11], %f16;

BB1_2:
=======
	st.global.f32 	[%rd7], %f15;
	neg.f32 	%f16, %f15;
	st.global.f32 	[%rd9], %f16;

BB6_2:
>>>>>>> upstream/master
	ret;
}


